<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Javascript on Software Developer</title>
    <link>/tags/javascript/</link>
    <description>Recent content in Javascript on Software Developer</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <lastBuildDate>Sun, 12 Nov 2017 11:54:12 +0000</lastBuildDate>
    
	<atom:link href="/tags/javascript/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Marvel API &#43; Vuepack (Vue &#43; Vuex)</title>
      <link>/blog/2017-11-12-marvel-api-vuepack-vue-vuex/</link>
      <pubDate>Sun, 12 Nov 2017 11:54:12 +0000</pubDate>
      
      <guid>/blog/2017-11-12-marvel-api-vuepack-vue-vuex/</guid>
      <description>Getting Started with Vue, Vuex, and API calls Originally published at https://codeburst.io/marvel-api-vuepack-vue-vuex-c84067a7f7fc
TL;DR — This article will show you how to get quickly started with Vue and Vuex. In addition to grabbing data from an API and displaying it. We will be building a simple application that searches the Marvel database for characters then displays the results. What is Vue?   Vue (pronounced /vjuː/, like view) is a progressive framework for building user interfaces.</description>
    </item>
    
    <item>
      <title>Angular vs React</title>
      <link>/blog/2017-03-06-angular-vs-react/</link>
      <pubDate>Mon, 06 Mar 2017 22:21:11 +0000</pubDate>
      
      <guid>/blog/2017-03-06-angular-vs-react/</guid>
      <description>Demo Links  ANGULAR
REACT
SLIDE DECK
  This is based on a lunch and learn presentation that I created, comparing Angular and React. First, I will be going through legacy vs future applications as the purpose of the presentation was to talk about the existing issues of the current application (written in AngularJS) and to provide knowledge around the newer frameworks/libraries.  Legacy Front End   Hard to Reuse Across Projects and Teams   A big issue with having a legacy front end is that it is hard to reuse across projects and teams.</description>
    </item>
    
    <item>
      <title>Simple React Redux Starter Guide / Documentation</title>
      <link>/blog/2017-01-07-simple-react-redux-starter-guide-documentation/</link>
      <pubDate>Sat, 07 Jan 2017 12:40:14 +0000</pubDate>
      
      <guid>/blog/2017-01-07-simple-react-redux-starter-guide-documentation/</guid>
      <description>When I started learning React Redux and creating side projects with it, I found it very hard to find a minimal starter/boilerplate package to start with. Picking and learning new tools can be difficult, especially in the current JavaScript ecosystem. The big reason to why I had trouble finding a starter was because a lot of the starter packages had a lot of boilerplate code that I did not want. I was looking for a pure front end application with routing and an API call that I could use as reference or as an example.</description>
    </item>
    
    <item>
      <title>JavaScript Unit Testing and Code Coverage</title>
      <link>/blog/2016-01-21-javascript-unit-testing/</link>
      <pubDate>Thu, 21 Jan 2016 10:24:56 +0000</pubDate>
      
      <guid>/blog/2016-01-21-javascript-unit-testing/</guid>
      <description>In my last blog post A Web Developer&amp;#8217;s Transition From School to the Workplace I wrote that as a web developer, you should never stop learning and growing. I joined a new company a bit over a year ago and in the past year I have learned a lot, specifically about unit testing code. This is because on our projects, unit tests are required for a user story to be closed.</description>
    </item>
    
    <item>
      <title>Internship - A Learning Experience</title>
      <link>/blog/2013-10-20-internship-learning-experience/</link>
      <pubDate>Sun, 20 Oct 2013 12:26:36 +0000</pubDate>
      
      <guid>/blog/2013-10-20-internship-learning-experience/</guid>
      <description>I had just recently completed my 8 week internship as a Web Developer. It was an amazing learning experience so I figure why not write about it.
The Job Search After graduating, I felt that my skills were &amp;#8216;good enough&amp;#8217; to seek a full-time or contract job. I was applying for jobs for about a month, I got a couple of interviews/coding tests and one company really boosted my morale by saying only 10% pass their coding test (still skeptical but positivity was what I needed at that point).</description>
    </item>
    
  </channel>
</rss>